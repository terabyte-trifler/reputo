"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instruction = void 0;
const bs58_1 = __importDefault(require("bs58"));
const byte_utils_1 = require("@1inch/byte-utils");
const buffer_1 = require("buffer");
const index_js_1 = require("../../domains/addresses/index.js");
class Instruction {
    programId;
    accounts;
    data;
    constructor(
    /**
     * Program Id to execute
     */
    programId, accounts, 
    /**
     * Program input
     */
    data) {
        this.programId = programId;
        this.accounts = accounts;
        this.data = data;
    }
    static fromNode(msg) {
        return msg.instructions.map((ix) => {
            return new Instruction(new index_js_1.SolanaAddress(ix.programId), ix.accounts.map((pubkey) => {
                const account = msg.accountKeys.find((x) => x.pubkey === pubkey);
                if (!account) {
                    throw new Error('account not found');
                }
                return {
                    isWritable: account.writable,
                    isSigner: account.signer,
                    pubkey: new index_js_1.SolanaAddress(account.pubkey)
                };
            }), buffer_1.Buffer.from(bs58_1.default.decode(ix.data)));
        });
    }
    toJSON() {
        return {
            accounts: this.accounts,
            data: (0, byte_utils_1.add0x)(this.data.toString('hex')),
            programId: this.programId
        };
    }
}
exports.Instruction = Instruction;
//# sourceMappingURL=instruction.js.map