"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuctionDetails = void 0;
const fusion_sdk_1 = require("@1inch/fusion-sdk");
const hasher_js_1 = require("./hasher.js");
const index_js_1 = require("../../utils/index.js");
class AuctionDetails extends fusion_sdk_1.AuctionDetails {
    static decode(data) {
        return AuctionDetails.fromBase(fusion_sdk_1.AuctionDetails.decode(data));
    }
    static fromBase(base) {
        return new AuctionDetails({
            ...base,
            initialRateBump: Number(base.initialRateBump)
        });
    }
    static fromExtension(extension) {
        return AuctionDetails.fromBase(fusion_sdk_1.AuctionDetails.fromExtension(extension));
    }
    static noAuction(duration = 120n, startTime = BigInt((0, index_js_1.now)())) {
        return new AuctionDetails({
            startTime,
            initialRateBump: 0,
            duration,
            points: []
        });
    }
    static fromJSON(data) {
        return new AuctionDetails({
            startTime: BigInt(data.startTime),
            initialRateBump: data.initialRateBump,
            duration: BigInt(data.duration),
            points: data.points,
            gasCost: {
                gasBumpEstimate: BigInt(data.gasCost.gasBumpEstimate),
                gasPriceEstimate: BigInt(data.gasCost.gasPriceEstimate)
            }
        });
    }
    toJSON() {
        return {
            duration: this.duration.toString(),
            gasCost: {
                gasBumpEstimate: this.gasCost.gasBumpEstimate.toString(),
                gasPriceEstimate: this.gasCost.gasPriceEstimate.toString()
            },
            points: this.points,
            initialRateBump: Number(this.initialRateBump),
            startTime: this.startTime.toString()
        };
    }
    hashForSolana() {
        return (0, hasher_js_1.hashForSolana)(this);
    }
}
exports.AuctionDetails = AuctionDetails;
//# sourceMappingURL=auction-details.js.map