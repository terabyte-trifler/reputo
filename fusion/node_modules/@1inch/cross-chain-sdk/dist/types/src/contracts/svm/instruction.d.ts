import { Buffer } from 'buffer';
import { NodeMessage } from './node-message.js';
import { SolanaAddress } from '../../domains/addresses/index.js';
export declare class Instruction {
    /**
     * Program Id to execute
     */
    readonly programId: SolanaAddress;
    readonly accounts: Array<AccountMeta>;
    /**
     * Program input
     */
    readonly data: Buffer;
    constructor(
    /**
     * Program Id to execute
     */
    programId: SolanaAddress, accounts: Array<AccountMeta>, 
    /**
     * Program input
     */
    data: Buffer);
    static fromNode(msg: NodeMessage): Instruction[];
    toJSON(): {
        programId: SolanaAddress;
        accounts: AccountMeta[];
        data: string;
    };
}
export type AccountMeta = {
    /** An account's public key */
    pubkey: SolanaAddress;
    /** True if an instruction requires a transaction signature matching `pubkey` */
    isSigner: boolean;
    /** True if the `pubkey` can be loaded as a read-write account. */
    isWritable: boolean;
};
