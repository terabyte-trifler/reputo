import { AuctionDetails as BaseAuctionDetails } from '@1inch/fusion-sdk';
import { hashForSolana } from './hasher.js';
import { now } from '../../utils/index.js';
export class AuctionDetails extends BaseAuctionDetails {
    static decode(data) {
        return AuctionDetails.fromBase(BaseAuctionDetails.decode(data));
    }
    static fromBase(base) {
        return new AuctionDetails({
            ...base,
            initialRateBump: Number(base.initialRateBump)
        });
    }
    static fromExtension(extension) {
        return AuctionDetails.fromBase(BaseAuctionDetails.fromExtension(extension));
    }
    static noAuction(duration = 120n, startTime = BigInt(now())) {
        return new AuctionDetails({
            startTime,
            initialRateBump: 0,
            duration,
            points: []
        });
    }
    static fromJSON(data) {
        return new AuctionDetails({
            startTime: BigInt(data.startTime),
            initialRateBump: data.initialRateBump,
            duration: BigInt(data.duration),
            points: data.points,
            gasCost: {
                gasBumpEstimate: BigInt(data.gasCost.gasBumpEstimate),
                gasPriceEstimate: BigInt(data.gasCost.gasPriceEstimate)
            }
        });
    }
    toJSON() {
        return {
            duration: this.duration.toString(),
            gasCost: {
                gasBumpEstimate: this.gasCost.gasBumpEstimate.toString(),
                gasPriceEstimate: this.gasCost.gasPriceEstimate.toString()
            },
            points: this.points,
            initialRateBump: Number(this.initialRateBump),
            startTime: this.startTime.toString()
        };
    }
    hashForSolana() {
        return hashForSolana(this);
    }
}
//# sourceMappingURL=auction-details.js.map